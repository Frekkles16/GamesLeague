
function datos()
{
    var xhttp = new XMLHttpRequest();

    xhttp.onreadystatechange = function() {
        if (this.readyState == 4 && this.status == 200) {
            getMapa(this.responseText)
            
        }
      };

  
      xhttp.open("POST", "select2.php", true);
      xhttp.setRequestHeader("Content-Type","application/x-www-form-urlencoded"); 
      xhttp.send(null); 
}


function getMapa(direcciones) {
    let map = new OpenLayers.Map("mapdiv");
    map.addLayer(new OpenLayers.Layer.OSM());
  
    let epsg4326 = new OpenLayers.Projection("EPSG:4326"); //WGS 1984 projection
    let projectTo = map.getProjectionObject(); //The map projection (Spherical Mercator)
  
    var lonLat = new OpenLayers.LonLat(2.0884578, 41.6074615).transform(epsg4326, projectTo);
  
    var zoom = 16;
    map.setCenter(lonLat, zoom);
  
    var vectorLayer = new OpenLayers.Layer.Vector("Overlay");
  
    // Define an array. This could be done in a seperate js file.
    // This tidy formatted section could even be generated by a server-side script (jsonp)
    // let direcciones = datos();
    console.log(direcciones);

    var direc = direcciones.split(',');
    console.log(direc);
    var markers = [];

      for(let i = 0; i < direc.length; i++) {
        markers[i] = parseFloat(direc[i]);
      }

      
    console.log(markers);
  
    //Loop through the markers array
    for (let i = 0; i < markers.length; i++) {
  
      var lon = markers[i];
      var lat = markers[i+1];
  
      var feature = new OpenLayers.Feature.Vector(
        new OpenLayers.Geometry.Point(lon, lat).transform(epsg4326, projectTo),
        { description: "marker number " + i },
        { externalGraphic: 'pikachu.jpg', graphicHeight: 30, graphicWidth: 30, graphicXOffset: -12, graphicYOffset: -25 }
      );
      vectorLayer.addFeatures(feature);
      i++;
    }
  
    map.addLayer(vectorLayer);
  
  }