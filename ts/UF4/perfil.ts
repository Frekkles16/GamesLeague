var longitud;
var latitud;


function comprobar()
{
    if (JSON.parse(localStorage.getItem('ar_login')) != null){
    
      }else{
          alert("Tienes que iniciar sesion");
          location.href ="http://localhost/TypeScript/js/yayos/index.html";
      }
}

function comentario()
{
  var xhttp = new XMLHttpRequest();

    xhttp.onreadystatechange = function() {
      if (this.readyState == 4 && this.status == 200) {
        alert("Mensaje Enviado")
      }
    };
    

      xhttp.open("POST", "mensaje.php", true);
      xhttp.setRequestHeader("Content-Type","application/x-www-form-urlencoded"); 
      xhttp.send("mensaje=" + document.getElementById('mensaje').value + "& id=" + yayo2.getId());
}


function iniciar(){
  window.setInterval(getLocation, 600000);
  getLocation();
    
}
function getLocation() {
  
  if (navigator.geolocation) {
  
    navigator.geolocation.getCurrentPosition(showPosition);
  
  } else {
  
  }
}

function showPosition(position) 
  {
    // var mapa = document.getElementById("mapa");
    // var nom = document.getElementById("user").value;
    latitud = position.coords.latitude;
    longitud = position.coords.longitude;
    // mapa.innerHTML = "<strong>Nombre:</strong> " + nom + "<br><strong>Latitud:</strong> " + position.coords.latitude + "<br><strong>Longitud:</strong> " + position.coords.longitude;
    update2();
  }


function update2()
  {
    var xhttp = new XMLHttpRequest();

    xhttp.onreadystatechange = function() {
      if (this.readyState == 4 && this.status == 200) { 
        console.log("Actualizado");
        mostraryayo();
      }
    };

    console.log(longitud);
    console.log(latitud);

    xhttp.open("POST", "updategeo.php", true);
    xhttp.setRequestHeader("Content-Type","application/x-www-form-urlencoded"); 
    xhttp.send("longitud=" + longitud + "& latitud=" + latitud); 
  }


  var yayo2;

function mostraryayo()
{
    var xhttp = new XMLHttpRequest();

    xhttp.onreadystatechange = function() {
      if (this.readyState == 4 && this.status == 200) {

        var datos = this.responseText.split(',');

        yayo2 = new yayo(parseFloat(datos[0]),datos[1],datos[2],parseInt(datos[3]),datos[4],datos[5],parseFloat(datos[6]))

        document.getElementById("nombres").innerHTML = yayo2.getNombre() + " " + yayo2.getApellido();
        document.getElementById("nombre").innerHTML = yayo2.getNombre();
        document.getElementById("apellido").innerHTML = yayo2.getApellido();
        document.getElementById("edad").innerHTML = yayo2.getEdad();

        getMapa();
        
      }
    };

      xhttp.open("POST", "mostraryayo.php", true);
      xhttp.setRequestHeader("Content-Type","application/x-www-form-urlencoded"); 
      xhttp.send();
}


function getMapa() {
  document.getElementById('mapdiv').innerHTML = "";
  let map = new OpenLayers.Map("mapdiv");
  map.addLayer(new OpenLayers.Layer.OSM());

  let epsg4326 = new OpenLayers.Projection("EPSG:4326"); //WGS 1984 projection
  let projectTo = map.getProjectionObject(); //The map projection (Spherical Mercator)

  var lonLat = new OpenLayers.LonLat(yayo2.getLongitud(), yayo2.getLatitud()).transform(epsg4326, projectTo);

  var zoom = 16;
  map.setCenter(lonLat, zoom);

  var vectorLayer = new OpenLayers.Layer.Vector("Overlay");

  // Define an array. This could be done in a seperate js file.
  // This tidy formatted section could even be generated by a server-side script (jsonp)

    var feature = new OpenLayers.Feature.Vector(
      new OpenLayers.Geometry.Point(yayo2.getLongitud(), yayo2.getLatitud()).transform(epsg4326, projectTo),
      { description: "marker number " },
      { externalGraphic: 'pikachu.jpg', graphicHeight: 30, graphicWidth: 30, graphicXOffset: -12, graphicYOffset: -25 }
    );
    vectorLayer.addFeatures(feature);
    

  map.addLayer(vectorLayer);

}


class yayo
{
    private ID:number;
    private nombre:String;
    private apellido:String;
    private edad:number;
    private longitud:any;
    private latitud:any;
    private familiar:any;


    getId() 
    {
        return this.ID;
    }

    getNombre() 
    {
        return this.nombre;
    }

    getApellido() 
    {
        return this.apellido;
    }

    getEdad()
    {
        return this.edad;
    }

    getLongitud() 
    {
        return this.longitud;
    }

    getLatitud() 
    {
        return this.latitud;
    }

    getFamiliar() 
    {
        return this.familiar;
    }

    setNombre(nombre)
    {
        this.nombre = nombre;
    }

    setApellido(apellido)
    {
        this.apellido = apellido;
    }

    setEdad(edad)
    {
        this.edad = edad;
    }

    setLongitud(longitud)
    {
        this.longitud = longitud;
    }

    setLatitud(latitud)
    {
        this.latitud = latitud;
    }

    setFamiliar(familiar)
    {
        this.familiar = familiar;
    }

    constructor(ID:number, nombre:String, apellido:String,  edad:number, longitud:any, latitud:any, familiar:any) 
    {
        this.nombre = nombre;
        this.apellido = apellido;
        this.ID = ID;
        this.edad = edad;
        this.longitud = longitud;
        this.latitud = latitud;
        this.familiar = familiar;
    }
    
}

